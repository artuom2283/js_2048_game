{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\n/* eslint-disable prettier/prettier */ function $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game(initialState) {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.initialState = initialState ? JSON.parse(JSON.stringify(initialState)) : Array(4).fill(null).map(function() {\n            return Array(4).fill(0);\n        });\n        this.board = JSON.parse(JSON.stringify(this.initialState));\n        this.score = 0;\n        this.status = \"idle\";\n        if (!initialState) {\n            this.addRandomTile();\n            this.addRandomTile();\n        }\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                if (this.status !== \"playing\") return;\n                this.board = this.board.map(function(row) {\n                    return _this.slideAndMerge(row);\n                });\n                this.finalizeMove();\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                if (this.status !== \"playing\") return;\n                this.board = this.board.map(function(row) {\n                    return(// eslint-disable-next-line prettier/prettier\n                    _this.slideAndMerge(row.reverse()).reverse());\n                });\n                this.finalizeMove();\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this;\n                this.transpose();\n                this.board = this.board.map(function(row) {\n                    return _this.slideAndMerge(row);\n                });\n                this.transpose();\n                this.finalizeMove();\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this;\n                this.transpose();\n                this.board = this.board.map(function(row) {\n                    return(// eslint-disable-next-line prettier/prettier\n                    _this.slideAndMerge(row.reverse()).reverse());\n                });\n                this.transpose();\n                this.finalizeMove();\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return JSON.parse(JSON.stringify(this.board));\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                if (this.status === \"win\") return \"win\";\n                if (this.noMovesLeft()) return \"lose\";\n                return \"playing\";\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                this.status = \"playing\";\n                this.addRandomTile();\n                this.addRandomTile();\n                this.updateBoard();\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                this.board = JSON.parse(JSON.stringify(this.initialState));\n                this.score = 0;\n                this.status = \"idle\";\n                this.updateBoard();\n            }\n        },\n        {\n            // Add your own methods here\n            key: \"updateBoard\",\n            value: function updateBoard() {\n                var _this = this;\n                var fieldCells = document.querySelectorAll(\".field-cell\");\n                fieldCells.forEach(function(cell, index) {\n                    var row = Math.floor(index / 4);\n                    var col = index % 4;\n                    var value = _this.board[row][col];\n                    cell.textContent = value === 0 ? \"\" : value;\n                    cell.className = \"field-cell \".concat(value ? \"field-cell--\".concat(value) : \"\");\n                });\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var emptyCells = [];\n                this.board.forEach(function(row, rowIndex) {\n                    row.forEach(function(value, colIndex) {\n                        if (value === 0) emptyCells.push({\n                            row: rowIndex,\n                            col: colIndex\n                        });\n                    });\n                });\n                if (emptyCells.length > 0) {\n                    var randomCell = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n                    this.board[randomCell.row][randomCell.col] = Math.random() < 0.9 ? 2 : 4;\n                }\n            }\n        },\n        {\n            key: \"slideAndMerge\",\n            value: function slideAndMerge(row) {\n                var nonZero = row.filter(function(value) {\n                    return value !== 0;\n                });\n                var merged = [];\n                var i = 0;\n                while(i < nonZero.length)if (nonZero[i] === nonZero[i + 1]) {\n                    merged.push(nonZero[i] * 2);\n                    this.score += nonZero[i] * 2;\n                    i += 2;\n                } else {\n                    merged.push(nonZero[i]);\n                    i++;\n                }\n                while(merged.length < 4)merged.push(0);\n                return merged;\n            }\n        },\n        {\n            key: \"transpose\",\n            value: function transpose() {\n                var newBoard = Array(4).fill(null).map(function() {\n                    return Array(4).fill(0);\n                });\n                for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++)newBoard[j][i] = this.board[i][j];\n                this.board = newBoard;\n            }\n        },\n        {\n            key: \"finalizeMove\",\n            value: function finalizeMove() {\n                var previousState = JSON.stringify(this.board);\n                this.addRandomTile();\n                this.updateBoard();\n                if (this.board.flat().includes(2048)) this.status = \"win\";\n                else if (this.noMovesLeft() && JSON.stringify(this.board) === previousState) this.status = \"lose\";\n            }\n        },\n        {\n            key: \"noMovesLeft\",\n            value: function noMovesLeft() {\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n                    if (this.board[row][col] === 0) return false;\n                    if (row < 3 && this.board[row][col] === this.board[row + 1][col]) return false;\n                    if (col < 3 && this.board[row][col] === this.board[row][col + 1]) return false;\n                }\n                return true;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$startButton = document.querySelector(\".button.start\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$scoreElement = document.querySelector(\".game-score\");\nfunction $197cd56b15c33885$var$updateUI() {\n    $197cd56b15c33885$var$game.updateBoard();\n    $197cd56b15c33885$var$scoreElement.textContent = $197cd56b15c33885$var$game.getScore();\n    if ($197cd56b15c33885$var$game.getStatus() === \"win\") {\n        $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n        $197cd56b15c33885$var$startButton.textContent = \"Restart\";\n    } else if ($197cd56b15c33885$var$game.getStatus() === \"lose\") {\n        $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n        $197cd56b15c33885$var$startButton.textContent = \"Restart\";\n    } else {\n        $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n    }\n}\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", function() {\n    $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$game.start();\n    $197cd56b15c33885$var$updateUI();\n    $197cd56b15c33885$var$startButton.textContent = \"Restart\";\n    $197cd56b15c33885$var$startButton.classList.remove(\"start\");\n    $197cd56b15c33885$var$startButton.classList.add(\"restart\");\n    $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    var key = e.key;\n    if ([\n        \"ArrowLeft\",\n        \"ArrowRight\",\n        \"ArrowUp\",\n        \"ArrowDown\"\n    ].includes(key)) {\n        switch(key){\n            case \"ArrowLeft\":\n                $197cd56b15c33885$var$game.moveLeft();\n                break;\n            case \"ArrowRight\":\n                $197cd56b15c33885$var$game.moveRight();\n                break;\n            case \"ArrowUp\":\n                $197cd56b15c33885$var$game.moveUp();\n                break;\n            case \"ArrowDown\":\n                $197cd56b15c33885$var$game.moveDown();\n                break;\n        }\n        $197cd56b15c33885$var$updateUI();\n    }\n});\n\n})();\n//# sourceMappingURL=index.723eafc0.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst startButton = document.querySelector('.button.start');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst scoreElement = document.querySelector('.game-score');\n\nfunction updateUI() {\n  game.updateBoard();\n\n  scoreElement.textContent = game.getScore();\n\n  if (game.getStatus() === 'win') {\n    messageWin.classList.remove('hidden');\n    messageLose.classList.add('hidden');\n    startButton.textContent = 'Restart';\n  } else if (game.getStatus() === 'lose') {\n    messageLose.classList.remove('hidden');\n    messageWin.classList.add('hidden');\n    startButton.textContent = 'Restart';\n  } else {\n    messageWin.classList.add('hidden');\n    messageLose.classList.add('hidden');\n  }\n}\n\nstartButton.addEventListener('click', () => {\n  game.restart();\n  game.start();\n\n  updateUI();\n\n  startButton.textContent = 'Restart';\n  startButton.classList.remove('start');\n  startButton.classList.add('restart');\n\n  messageStart.classList.add('hidden');\n});\n\ndocument.addEventListener('keydown', (e) => {\n  const key = e.key;\n\n  if (['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'].includes(key)) {\n    switch (key) {\n      case 'ArrowLeft':\n        game.moveLeft();\n        break;\n      case 'ArrowRight':\n        game.moveRight();\n        break;\n      case 'ArrowUp':\n        game.moveUp();\n        break;\n      case 'ArrowDown':\n        game.moveDown();\n        break;\n    }\n\n    updateUI();\n  }\n});\n","/* eslint-disable prettier/prettier */\n'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(initialState) {\n    this.initialState = initialState\n      ? JSON.parse(JSON.stringify(initialState))\n      : Array(4)\n        .fill(null)\n        .map(() => Array(4).fill(0));\n\n    this.board = JSON.parse(JSON.stringify(this.initialState));\n    this.score = 0;\n    this.status = 'idle';\n\n    if (!initialState) {\n      this.addRandomTile();\n      this.addRandomTile();\n    }\n  }\n\n  moveLeft() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    this.board = this.board.map((row) => this.slideAndMerge(row));\n    this.finalizeMove();\n  }\n\n  moveRight() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    this.board = this.board.map((row) =>\n      // eslint-disable-next-line prettier/prettier\n      this.slideAndMerge(row.reverse()).reverse());\n\n    this.finalizeMove();\n  }\n\n  moveUp() {\n    this.transpose();\n    this.board = this.board.map((row) => this.slideAndMerge(row));\n    this.transpose();\n    this.finalizeMove();\n  }\n\n  moveDown() {\n    this.transpose();\n\n    this.board = this.board.map((row) =>\n      // eslint-disable-next-line prettier/prettier\n      this.slideAndMerge(row.reverse()).reverse());\n    this.transpose();\n    this.finalizeMove();\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return JSON.parse(JSON.stringify(this.board));\n  }\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    if (this.status === 'win') {\n      return 'win';\n    }\n\n    if (this.noMovesLeft()) {\n      return 'lose';\n    }\n\n    return 'playing';\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.status = 'playing';\n    this.addRandomTile();\n    this.addRandomTile();\n    this.updateBoard();\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.board = JSON.parse(JSON.stringify(this.initialState));\n    this.score = 0;\n    this.status = 'idle';\n    this.updateBoard();\n  }\n\n  // Add your own methods here\n  updateBoard() {\n    const fieldCells = document.querySelectorAll('.field-cell');\n\n    fieldCells.forEach((cell, index) => {\n      const row = Math.floor(index / 4);\n      const col = index % 4;\n      const value = this.board[row][col];\n\n      cell.textContent = value === 0 ? '' : value;\n      cell.className = `field-cell ${value ? `field-cell--${value}` : ''}`;\n    });\n  }\n\n  addRandomTile() {\n    const emptyCells = [];\n\n    this.board.forEach((row, rowIndex) => {\n      row.forEach((value, colIndex) => {\n        if (value === 0) {\n          emptyCells.push({ row: rowIndex, col: colIndex });\n        }\n      });\n    });\n\n    if (emptyCells.length > 0) {\n      const randomCell =\n        emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n      this.board[randomCell.row][randomCell.col] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  slideAndMerge(row) {\n    const nonZero = row.filter((value) => value !== 0);\n    const merged = [];\n    let i = 0;\n\n    while (i < nonZero.length) {\n      if (nonZero[i] === nonZero[i + 1]) {\n        merged.push(nonZero[i] * 2);\n        this.score += nonZero[i] * 2;\n        i += 2;\n      } else {\n        merged.push(nonZero[i]);\n        i++;\n      }\n    }\n\n    while (merged.length < 4) {\n      merged.push(0);\n    }\n\n    return merged;\n  }\n\n  transpose() {\n    const newBoard = Array(4)\n      .fill(null)\n      .map(() => Array(4).fill(0));\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        newBoard[j][i] = this.board[i][j];\n      }\n    }\n\n    this.board = newBoard;\n  }\n\n  finalizeMove() {\n    const previousState = JSON.stringify(this.board);\n\n    this.addRandomTile();\n    this.updateBoard();\n\n    if (this.board.flat().includes(2048)) {\n      this.status = 'win';\n    } else if (\n      this.noMovesLeft() &&\n      JSON.stringify(this.board) === previousState\n    ) {\n      this.status = 'lose';\n    }\n  }\n\n  noMovesLeft() {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] === 0) {\n          return false;\n        }\n\n        if (row < 3 && this.board[row][col] === this.board[row + 1][col]) {\n          return false;\n        }\n\n        if (col < 3 && this.board[row][col] === this.board[row][col + 1]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n"],"names":["$197cd56b15c33885$var$game","protoProps","Game","initialState","instance","Constructor","TypeError","JSON","parse","stringify","Array","fill","map","board","score","status","addRandomTile","key","value","_this","row","slideAndMerge","finalizeMove","reverse","transpose","noMovesLeft","updateBoard","fieldCells","document","querySelectorAll","forEach","cell","index","Math","floor","textContent","className","concat","emptyCells","rowIndex","colIndex","push","col","length","randomCell","random","nonZero","filter","merged","i","newBoard","j","previousState","flat","includes","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","prototype","$197cd56b15c33885$var$startButton","querySelector","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$scoreElement","$197cd56b15c33885$var$updateUI","getScore","getStatus","classList","remove","add","addEventListener","restart","start","e","moveLeft","moveRight","moveUp","moveDown"],"version":3,"file":"index.723eafc0.js.map"}